{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}
<img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="ProductPhotoImg">
{% for image in product.images %}
  <a href="{{ image.src | img_url: 'large' }}">
    <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
  </a>
{% endfor %}
<h1>{{ product.title }}</h1>
<form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
  <select name="id" id="productSelect">
    {% for variant in product.variants %}
      {% if variant.available %}
        <option value="{{ variant.id }}">
          {{ variant.title }} - {{ variant.price | money_with_currency }}
        </option>
      {% else %}
        <option disabled="disabled">
          {{ variant.title }} - sold out
        </option>
      {% endif %}
    {% endfor %}
  </select>
  {{ current_variant.price | money }}
  <label for="Quantity">quantity</label>
  <input type="number" id="Quantity" name="quantity" value="1" min="1">
  <button name="add" id="AddToCart" class="btn btn-sm btn-success">Add to cart</button>
</form>
<div>{{ product.description }}</div>

<!-- Modal -->
<div class="modal fade" id="productModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="productModalLabel">Welcome</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>We have <span id="productQty">-</span> left for <u>{{product.title}}</u> in our stock!</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  const btnBaseClass = "btn btn-sm";
  const addButton = document.querySelector("#AddToCart");

  const addToCart = async () => {
    const currentVariant = {
      id: {{ current_variant.id }},
      quantity: document.querySelector("#Quantity")?.value || 0,
    };
    const cartSize = {{ cart.items.size }};
    const formData = {
      items: [
        {
          quantity: currentVariant.quantity,
          id: currentVariant.id,
          properties: {
            'cart_index': cartSize,
          }
        }
      ]
    };

    await fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then((res) => {
      window.location.href = "/cart";
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }

  if (!!addButton) {
    {% if current_variant.available %}
      // If it is avaiable, add hover styles and onClick event.
      addButton.addEventListener("mouseover", (event) => {
        addButton.className = `${btnBaseClass} btn-primary`;
      });
      addButton.addEventListener("mouseout", (event) => {
        addButton.className = `${btnBaseClass} btn-success`;
      });

      addButton.addEventListener("click", async (event) => {
        // Custom add to cart event.
        event.preventDefault();
        addToCart();
      });

    {% else %}
      // If it is unavailable, disable.
      addButton.className = `${btnBaseClass} btn-secondary disabled`;
    {% endif %}
  }

  // Calculate total quantity amoung every variants.
  let qty = 0;
  {% for variant in product.variants %}
    qty += {{ variant.inventory_quantity }} || 0;
  {% endfor %}
  // Update visual quantity.
  const productQty = document.querySelector("#productQty");
  console.log({productQty});
  if (!!productQty) {
    productQty.innerText = qty.toString();
    productQty.className = qty > 0 ? "text-success" : "text-danger";
  }
  // Show modal automatically without the user's consent.
  var myModal = new bootstrap.Modal(document.getElementById('productModal'), {});
  myModal?.show();
</script>
